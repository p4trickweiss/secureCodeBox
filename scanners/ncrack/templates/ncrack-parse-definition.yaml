# SPDX-FileCopyrightText: the secureCodeBox authors
#
# SPDX-License-Identifier: Apache-2.0

apiVersion: "execution.securecodebox.io/v1"
kind: ParseDefinition
metadata:
  name: "ncrack-xml"
spec:
  image: "{{ .Values.parser.image.repository }}:{{ .Values.parser.image.tag | default .Chart.Version }}"
  imagePullPolicy: {{ .Values.parser.image.pullPolicy }}
  ttlSecondsAfterFinished: {{ .Values.parser.ttlSecondsAfterFinished }}
  env:
    {{- $env := .Values.parser.env | default (list) }}
    {{- if .Values.encryptPasswords.existingSecret }}
    {{- $env = append $env (dict "name" "ENCRYPTION_KEY_LOCATION" "value" (printf "/secrets/%s" .Values.encryptPasswords.key)) }}
    {{- end }}
    {{- toYaml $env | nindent 4 }}
  scopeLimiterAliases:
    {{- toYaml .Values.parser.scopeLimiterAliases | nindent 4 }}
  affinity:
    {{- toYaml .Values.parser.affinity | nindent 4 }}
  tolerations:
    {{- toYaml .Values.parser.tolerations | nindent 4 }}
  {{- with .Values.imagePullSecrets }}
  imagePullSecrets:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.parser.resources }}
  resources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.parser.nodeSelector }}
  nodeSelector:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- if .Values.encryptPasswords.existingSecret }}
  volumes:
    - name: "ncrack-secret"
      secret:
        secretName: {{ .Values.encryptPasswords.existingSecret }}
  volumeMounts:
    - name: "ncrack-secret"
      mountPath: "/secrets/"
  {{- end }}
